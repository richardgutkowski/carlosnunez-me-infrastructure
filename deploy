#!/usr/bin/env bash

usage() {
  printf "deploy.sh [target_environment]\n"
  printf "Deploys infrastructure for carlosnunez.me\n\n"
  printf "  target_environment: The environment to deploy onto."
}

is_env_supported() {
  env_to_check="$1"
  supported_envs="$2"
  matching_envs_found=$(echo "$supported_envs" | grep "${env_to_check}")
  if [ "$matching_envs_found" != "" ]
  then
    return 0
  else
    return 1
  fi
}

NUMBER_OF_ARGS_EXPECTED=1
if [ "$#" != "$NUMBER_OF_ARGS_EXPECTED" ]
then
  usage
  exit 1
fi

# We'll either start our CI environment if this is running from our local
# machine or start the actual deployment if this is running from within a
# docker container.
if [ ! -f .dockerenv ]
then
  SUPPORTED_ENVIRONMENTS=$(find config -type f -name "infrastructure_config*" \
    -exec sh -c "echo {} | cut -f2 -d '.'" \;)
  target_env=$1
  if ! is_env_supported $target_env $SUPPORTED_ENVIRONMENTS
  then
    printf "ERROR: '${target_env}' not found in '${SUPPORTED_ENVIRONMENTS}'\n"
    exit 1
  fi

  export TARGET_ENVIRONMENT=$target_env
  echo "Booting local Jenkins CI. Target environment: $TARGET_ENVIRONMENT"
  [ "$(docker-compose ps -q | wc -l)" != "0" ] && docker-compose down
  docker-compose up --abort-on-container-exit
else
  if [ -f .dockerenv \
    -a "$JENKINS_JOB_NAME" != "" \
    -a "$JENKINS_MASTER_HOSTNAME" != "" \
    -a "$JENKINS_USERNAME" != "" \
    -a "$JENKINS_PASSWORD" != "" \
    -a "$TARGET_ENVIRONMENT" != "" ]
  then
    echo "Doing the deployment!"
    WAIT_PERIOD=15s
    retries=0
    start_build_url="http://$JENKINS_USERNAME:$JENKINS_PASSWORD@$JENKINS_MASTER_HOSTNAME:8080/\
job/$JENKINS_JOB_NAME/build"
    last_build_stats_url="http://$JENKINS_USERNAME:$JENKINS_PASSWORD@$JENKINS_MASTER_HOSTNAME:8080/\
job/$JENKINS_JOB_NAME/lastBuild/api/json?tree=building,result"
    last_build_console_text_url="http://$JENKINS_USERNAME:$JENKINS_PASSWORD@$JENKINS_MASTER_HOSTNAME:8080/\
job/$JENKINS_JOB_NAME/lastBuild/consoleText"
    while [ $retries -lt 10 ]
    do
      response_code=$(curl -X POST -so /dev/null -w "%{http_code}" $start_build_url)
      if [ "$?" != "0" -o "$response_code" != "201" ]
      then
        retries=$((retries+1))
        if [ "$response_code" == "000" ]
        then
          echo "Something went wrong with cURL. Retrying in $WAIT_PERIOD"
        else
          echo "Expected HTTP 200, got HTTP $response_code. Retrying in $WAIT_PERIOD"
        fi
        echo "URL we tried to hit: $start_build_url"
        sleep $WAIT_PERIOD
      else
        last_build_status=$(curl -so /dev/null $last_build_stats_url)
        last_build_console_text=$(curl -so /dev/null $last_build_console_text_url)
        if [ "$(echo $last_build_status
        echo "Deployment was successful!"
        exit 0
      fi
    done
    echo "Deployment failed."
    exit 1
  else
    echo "ERROR: A required environment variable is missing. Ensure that it \
is defined in docker-compose.yml. Here's what I have:\t \
JENKINS_MASTER_HOSTNAME=$JENKINS_MASTER_HOSTNAME\t \
JENKINS_JOB_NAME=$JENKINS_JOB_NAME\t \
JENKINS_USERNAME=$JENKINS_USERNAME\t \
JENKINS_PASSWORD=$JENKINS_PASSWORD\t \
TARGET_ENVIRONMENT=$TARGET_ENVIRONMENT"
    exit 1
fi
fi
